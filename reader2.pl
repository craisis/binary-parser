#!/usr/bin/perl
# Read in binary stream from STDIN
#my $inData = hex <>;
#my $inData = hexa0000000000000000021596960700080604010104080700110000434000000a0a0a0a0a0a000000000001020007000200050000000000000100000000000000000000000000000000011f040000000100030000ec01010000000000000000000000000000cb0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
my @bytes;
open my $FH, "<", $ARGV[0];
while( read $FH, $byte, 2 ){
	next unless ($byte =~ /^[A-Fa-f0-9]+$/);
	unshift @bytes, hex $byte;
}
close $FH;

if ($ARGV[1]){
	open my $configFH, "<", $ARGV[1];
	my @byte_config;
	while(<$configFH>){
		chomp;
		my @cLine = split /\t\s*/;
		my $lowerbyte = $cLine[0];
		my $upperbyte = $lowerbyte;
		if ($lowerbyte =~ /(\d+):(\d+)/){
			$lowerbyte = $1;
			$upperbyte = $2;
			
		}
		$byte_config[$lowerbyte..$upperbyte] = {NAME => $cLine[1], RW => $cLine[2], VALDEF => $cLine[3]};
		
	}
	close $configFH;
}
for my $i (0..scalar @bytes){
	printf "$i\t%02x\t%08b\t$byte_config[$i]->{NAME}\n", $bytes[$i], $bytes[$i];
	
}
#while(1){
#	print "What byte to you want the value for?: ";
#	my $byteReq = <STDIN>;
#	exit if ($byteReq eq 'q');
#	print "Showing bits ".($byteReq*8+8).":".($byteReq*8)."\n";
#	printf "value of byte $byteReq is: %08b\n", $bytes[$byteReq];
#}